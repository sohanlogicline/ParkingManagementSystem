// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: parking/gunk/api/parkingslot/all.proto

package parkingslot

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_UNKNOWN          Status = 0
	Status_AVAILABLE        Status = 1
	Status_UNDERMAINTENANCE Status = 2
	Status_BOOKED           Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "AVAILABLE",
		2: "UNDERMAINTENANCE",
		3: "BOOKED",
	}
	Status_value = map[string]int32{
		"UNKNOWN":          0,
		"AVAILABLE":        1,
		"UNDERMAINTENANCE": 2,
		"BOOKED":           3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_parking_gunk_api_parkingslot_all_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_parking_gunk_api_parkingslot_all_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_parking_gunk_api_parkingslot_all_proto_rawDescGZIP(), []int{0}
}

type ParkingSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	LotID      string                 `protobuf:"bytes,2,opt,name=LotID,proto3" json:"LotID,omitempty"`
	SlotNumber int32                  `protobuf:"varint,3,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	Status     Status                 `protobuf:"varint,4,opt,name=Status,proto3,enum=parkingslot.Status" json:"Status,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *ParkingSlot) Reset() {
	*x = ParkingSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParkingSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParkingSlot) ProtoMessage() {}

func (x *ParkingSlot) ProtoReflect() protoreflect.Message {
	mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParkingSlot.ProtoReflect.Descriptor instead.
func (*ParkingSlot) Descriptor() ([]byte, []int) {
	return file_parking_gunk_api_parkingslot_all_proto_rawDescGZIP(), []int{0}
}

func (x *ParkingSlot) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ParkingSlot) GetLotID() string {
	if x != nil {
		return x.LotID
	}
	return ""
}

func (x *ParkingSlot) GetSlotNumber() int32 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

func (x *ParkingSlot) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *ParkingSlot) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ParkingSlot) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ParkingSlotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParkingSlot *ParkingSlot `protobuf:"bytes,1,opt,name=ParkingSlot,proto3" json:"ParkingSlot,omitempty"`
}

func (x *ParkingSlotData) Reset() {
	*x = ParkingSlotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParkingSlotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParkingSlotData) ProtoMessage() {}

func (x *ParkingSlotData) ProtoReflect() protoreflect.Message {
	mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParkingSlotData.ProtoReflect.Descriptor instead.
func (*ParkingSlotData) Descriptor() ([]byte, []int) {
	return file_parking_gunk_api_parkingslot_all_proto_rawDescGZIP(), []int{1}
}

func (x *ParkingSlotData) GetParkingSlot() *ParkingSlot {
	if x != nil {
		return x.ParkingSlot
	}
	return nil
}

// UpdateParkingSlotRequest ...
type UpdateParkingSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LotID      string `protobuf:"bytes,1,opt,name=LotID,proto3" json:"LotID,omitempty"`
	SlotNumber int32  `protobuf:"varint,2,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	Status     Status `protobuf:"varint,3,opt,name=Status,proto3,enum=parkingslot.Status" json:"Status,omitempty"`
}

func (x *UpdateParkingSlotRequest) Reset() {
	*x = UpdateParkingSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParkingSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParkingSlotRequest) ProtoMessage() {}

func (x *UpdateParkingSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParkingSlotRequest.ProtoReflect.Descriptor instead.
func (*UpdateParkingSlotRequest) Descriptor() ([]byte, []int) {
	return file_parking_gunk_api_parkingslot_all_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateParkingSlotRequest) GetLotID() string {
	if x != nil {
		return x.LotID
	}
	return ""
}

func (x *UpdateParkingSlotRequest) GetSlotNumber() int32 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

func (x *UpdateParkingSlotRequest) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

// UpdateParkingSlotResponse ...
type UpdateParkingSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ParkingSlotData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UpdateParkingSlotResponse) Reset() {
	*x = UpdateParkingSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParkingSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParkingSlotResponse) ProtoMessage() {}

func (x *UpdateParkingSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parking_gunk_api_parkingslot_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParkingSlotResponse.ProtoReflect.Descriptor instead.
func (*UpdateParkingSlotResponse) Descriptor() ([]byte, []int) {
	return file_parking_gunk_api_parkingslot_all_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateParkingSlotResponse) GetData() *ParkingSlotData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_parking_gunk_api_parkingslot_all_proto protoreflect.FileDescriptor

var file_parking_gunk_api_parkingslot_all_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x2f, 0x61,
	0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x73, 0x6c, 0x6f, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01,
	0x00, 0x52, 0x02, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x05, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x05, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x0a,
	0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01,
	0x00, 0x52, 0x0a, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00,
	0x80, 0x01, 0x00, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0f, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x49, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x66, 0x0a, 0x0f, 0x50, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0b,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x2e,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x42, 0x0f, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x0b, 0x50, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18,
	0x00, 0x22, 0xdb, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x05, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x05,
	0x4c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x0a, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x0a, 0x53, 0x6c, 0x6f, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x3a, 0x29, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x92, 0x41, 0x20, 0x0a,
	0x1e, 0xd2, 0x01, 0x05, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0xd2, 0x01, 0x0a, 0x53, 0x6c, 0x6f, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0xd2, 0x01, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x66, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x6c, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x78, 0x00, 0x80, 0x01, 0x00, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x3a,
	0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x2a, 0x62, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x11, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x1a, 0x04,
	0x08, 0x00, 0x18, 0x00, 0x12, 0x13, 0x0a, 0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x1a, 0x04, 0x08, 0x00, 0x18, 0x00, 0x12, 0x1a, 0x0a, 0x10, 0x55, 0x4e, 0x44,
	0x45, 0x52, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x1a,
	0x04, 0x08, 0x00, 0x18, 0x00, 0x12, 0x10, 0x0a, 0x06, 0x42, 0x4f, 0x4f, 0x4b, 0x45, 0x44, 0x10,
	0x03, 0x1a, 0x04, 0x08, 0x00, 0x18, 0x00, 0x1a, 0x02, 0x18, 0x00, 0x32, 0x88, 0x06, 0x0a, 0x12,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xec, 0x05, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x05, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00,
	0x92, 0x41, 0xda, 0x04, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x70, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x1a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x70,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x20, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x4a, 0x5f, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x58, 0x0a, 0x1e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x20,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x2e, 0x12, 0x36, 0x0a,
	0x34, 0x1a, 0x32, 0x23, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4a, 0x7e, 0x0a, 0x03, 0x34, 0x30, 0x30, 0x12, 0x77, 0x0a, 0x30,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x2e,
	0x12, 0x43, 0x0a, 0x41, 0x4a, 0x3f, 0x7b, 0x20, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20,
	0x34, 0x30, 0x30, 0x2c, 0x20, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x20,
	0x22, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x63, 0x6f,
	0x72, 0x72, 0x65, 0x63, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x6d, 0x61, 0x6c, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x64, 0x22, 0x20, 0x7d, 0x4a, 0x6f, 0x0a, 0x03, 0x34, 0x30, 0x31, 0x12, 0x68, 0x0a, 0x34,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x6e, 0x6f,
	0x74, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x12, 0x30, 0x0a, 0x2e, 0x4a, 0x2c, 0x7b, 0x20, 0x22, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x3a, 0x20, 0x34, 0x30, 0x31, 0x2c, 0x20, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x3a, 0x20, 0x22, 0x6e, 0x6f, 0x74, 0x20, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x22, 0x20, 0x7d, 0x4a, 0x55, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x4e, 0x0a,
	0x18, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x6e,
	0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x12, 0x32, 0x0a, 0x30, 0x4a, 0x2e, 0x7b,
	0x20, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x34, 0x30, 0x34, 0x2c, 0x20, 0x22, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x20, 0x74, 0x6f, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x20, 0x7d, 0x4a, 0x5f, 0x0a,
	0x03, 0x35, 0x30, 0x30, 0x12, 0x58, 0x0a, 0x24, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x12, 0x30, 0x0a, 0x2e,
	0x4a, 0x2c, 0x7b, 0x20, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x20, 0x35, 0x30, 0x30, 0x2c,
	0x20, 0x22, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x20, 0x22, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x20, 0x7d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x2d, 0x73, 0x6c, 0x6f, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x28, 0x00, 0x30,
	0x00, 0x1a, 0x03, 0x88, 0x02, 0x00, 0x42, 0x43, 0x48, 0x01, 0x50, 0x00, 0x5a, 0x28, 0x70, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x3b, 0x70, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x73, 0x6c, 0x6f, 0x74, 0x80, 0x01, 0x00, 0x88, 0x01, 0x00, 0x90, 0x01, 0x00, 0xb8,
	0x01, 0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01, 0x01, 0xd0, 0x02, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_parking_gunk_api_parkingslot_all_proto_rawDescOnce sync.Once
	file_parking_gunk_api_parkingslot_all_proto_rawDescData = file_parking_gunk_api_parkingslot_all_proto_rawDesc
)

func file_parking_gunk_api_parkingslot_all_proto_rawDescGZIP() []byte {
	file_parking_gunk_api_parkingslot_all_proto_rawDescOnce.Do(func() {
		file_parking_gunk_api_parkingslot_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_parking_gunk_api_parkingslot_all_proto_rawDescData)
	})
	return file_parking_gunk_api_parkingslot_all_proto_rawDescData
}

var (
	file_parking_gunk_api_parkingslot_all_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_parking_gunk_api_parkingslot_all_proto_msgTypes  = make([]protoimpl.MessageInfo, 4)
	file_parking_gunk_api_parkingslot_all_proto_goTypes   = []interface{}{
		(Status)(0),                       // 0: parkingslot.Status
		(*ParkingSlot)(nil),               // 1: parkingslot.ParkingSlot
		(*ParkingSlotData)(nil),           // 2: parkingslot.ParkingSlotData
		(*UpdateParkingSlotRequest)(nil),  // 3: parkingslot.UpdateParkingSlotRequest
		(*UpdateParkingSlotResponse)(nil), // 4: parkingslot.UpdateParkingSlotResponse
		(*timestamppb.Timestamp)(nil),     // 5: google.protobuf.Timestamp
	}
)

var file_parking_gunk_api_parkingslot_all_proto_depIdxs = []int32{
	0, // 0: parkingslot.ParkingSlot.Status:type_name -> parkingslot.Status
	5, // 1: parkingslot.ParkingSlot.CreatedAt:type_name -> google.protobuf.Timestamp
	5, // 2: parkingslot.ParkingSlot.UpdatedAt:type_name -> google.protobuf.Timestamp
	1, // 3: parkingslot.ParkingSlotData.ParkingSlot:type_name -> parkingslot.ParkingSlot
	0, // 4: parkingslot.UpdateParkingSlotRequest.Status:type_name -> parkingslot.Status
	2, // 5: parkingslot.UpdateParkingSlotResponse.Data:type_name -> parkingslot.ParkingSlotData
	3, // 6: parkingslot.ParkingSlotService.UpdateParkingSlot:input_type -> parkingslot.UpdateParkingSlotRequest
	4, // 7: parkingslot.ParkingSlotService.UpdateParkingSlot:output_type -> parkingslot.UpdateParkingSlotResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_parking_gunk_api_parkingslot_all_proto_init() }
func file_parking_gunk_api_parkingslot_all_proto_init() {
	if File_parking_gunk_api_parkingslot_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_parking_gunk_api_parkingslot_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParkingSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_gunk_api_parkingslot_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParkingSlotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_gunk_api_parkingslot_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParkingSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parking_gunk_api_parkingslot_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParkingSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parking_gunk_api_parkingslot_all_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parking_gunk_api_parkingslot_all_proto_goTypes,
		DependencyIndexes: file_parking_gunk_api_parkingslot_all_proto_depIdxs,
		EnumInfos:         file_parking_gunk_api_parkingslot_all_proto_enumTypes,
		MessageInfos:      file_parking_gunk_api_parkingslot_all_proto_msgTypes,
	}.Build()
	File_parking_gunk_api_parkingslot_all_proto = out.File
	file_parking_gunk_api_parkingslot_all_proto_rawDesc = nil
	file_parking_gunk_api_parkingslot_all_proto_goTypes = nil
	file_parking_gunk_api_parkingslot_all_proto_depIdxs = nil
}
